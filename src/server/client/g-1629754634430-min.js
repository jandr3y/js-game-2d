function fetchLocal(t){return new Promise(function(e,i){var s=new XMLHttpRequest;s.onload=function(){e(new Response(s.responseText,{status:s.status}))},s.onerror=function(){i(new TypeError("Local request failed"))},s.open("GET",t),s.send(null)})}const DEBUG_BAR=document.getElementById("debug");class Game{constructor(t={}){this.canvas=document.getElementById("root"),this.context=this.canvas.getContext("2d"),this.settings=t}gameloop(t=null){window.requestAnimationFrame(function e(){t&&t(),window.requestAnimationFrame(e)})}run(t){t(),this.gameloop()}}class Camera{constructor(t){this.x=0,this.y=0,this.width=960,this.height=640,this.maxX=100*t.tileSize-this.width,this.maxY=100*t.tileSize-this.height,this.speed=1}follow(t){this.x=t.x,this.y=t.y}}class Map{constructor(t){this.tilemap=null,this.tileset=new Image,this.tileSize=32,this.game=t,this.imageColumns=0,this.mapColumns=100}load(){return new Promise((t,e)=>{fetchLocal("assets/map_two.json").then(t=>t.json()).then(e=>{this.tilemap=e,this.tileset.src="assets/base_out_atlas.png",this.tileset.addEventListener("load",()=>{this.imageColumns=this.tileset.width/this.tileSize,t()})})})}render(t,e=!1){if(this.tilemap){var i=this.tileset.width/this.tileSize,s=Math.floor(t.x/this.tileSize),h=s+t.width/this.tileSize,a=Math.floor(t.y/this.tileSize),r=a+t.height/this.tileSize,n=-t.x+s*this.tileSize,o=-t.y+a*this.tileSize;let S=0;var l,m,d,p,c=Array.from(this.tilemap.layers).length;for(let t=0;t<c;t++)if(!e||-1!==this.tilemap.layers[t].name.indexOf("_UP")){S=a*this.mapColumns+s;for(let e=a;e<r;e++){for(let r=s;r<h;r++)"Colision"!==this.tilemap.layers[t].name&&(0!==(p=this.tilemap.layers[t].data[S])&&(l=(p-1)%i*this.tileSize,m=Math.floor(p/i)*this.tileSize,d=(r-s)*this.tileSize+n,p=(e-a)*this.tileSize+o,this.game.context.drawImage(this.tileset,l,m,this.tileSize,this.tileSize,Math.round(d),Math.round(p),this.tileSize,this.tileSize)),S++);S+=this.mapColumns-this.game.canvas.width/this.tileSize,this.lastTileIndex=S}}}}}class Keyboard{constructor(){this.KEYS={ArrowDown:!1,ArrowUp:!1,ArrowRight:!1,ArrowLeft:!1}}onDown(t){this.KEYS[t.code]=!0}onUp(t){this.KEYS[t.code]=!1}listen(){window.addEventListener("keydown",t=>this.onDown(t)),window.addEventListener("keyup",t=>this.onUp(t))}}class Player{constructor(t,e={}){this.sprite=new Image,this.game=t,this.spriteSize=32,this.tick=0,this.tickPerFrame=10,this.frameIndex=0,this.maxFrame=3,this.direction=0,this.speed=0,this.maxX=100*map.tileSize-t.canvas.width,this.maxY=100*map.tileSize-t.canvas.height,this.x=800,this.y=2200,this.settings=e}load(){return new Promise((t,e)=>{this.sprite.src="assets/person.png",this.sprite.addEventListener("load",()=>t())})}render(){var t=this.game.canvas.width/2-16,e=this.game.canvas.height/2-16;this.tick++,this.tick>this.tickPerFrame&&(this.frameIndex++,this.tick=0),this.frameIndex>=this.maxFrame&&(this.frameIndex=0),4<this.speed?(this.tickPerFrame=3,this.game.context.drawImage(this.sprite,this.frameIndex*this.spriteSize,this.direction*this.spriteSize,this.spriteSize,this.spriteSize,t,e,this.spriteSize,this.spriteSize)):0<this.speed?(this.tickPerFrame=10,this.game.context.drawImage(this.sprite,this.frameIndex*this.spriteSize,this.direction*this.spriteSize,this.spriteSize,this.spriteSize,t,e,this.spriteSize,this.spriteSize)):this.game.context.drawImage(this.sprite,this.spriteSize,this.direction*this.spriteSize,this.spriteSize,this.spriteSize,t,e,this.spriteSize,this.spriteSize)}checkColision(t,e){if(!t)return!0;let i=this.x,s=this.y;"UP"===e&&(s-=this.speed+(this.settings.COLLISION_PRED.UP||18)),"DOWN"===e&&(s+=this.speed+(this.settings.COLLISION_PRED.DOWN||18)),"RIGHT"===e&&(i+=this.speed+(this.settings.COLLISION_PRED.RIGHT||10)),"LEFT"===e&&(i-=this.speed+(this.settings.COLLISION_PRED.LEFT||10));var h=this.game.canvas.width/2;e=this.game.canvas.height/2;return i=Math.floor((i+h)/this.spriteSize),s=Math.floor((s+e)/this.spriteSize),e=Math.floor(100*s+i),t.data[e]===this.game.settings.collisionID}movement({KEYS:t},e=null){t.ArrowDown||t.ArrowLeft||t.ArrowUp||t.ArrowRight?(t.ArrowDown&&(this.checkColision(e,"DOWN")?this.speed=0:this.y+=this.speed),t.ArrowUp&&(this.checkColision(e,"UP")?this.speed=0:this.y-=this.speed),t.ArrowRight&&(this.checkColision(e,"RIGHT")?this.speed=0:this.x+=this.speed),t.ArrowLeft&&(this.checkColision(e,"LEFT")?this.speed=0:this.x-=this.speed),this.speed<(this.settings.MAX_SPEED||5)&&(this.speed+=this.settings.SPEED||.08)):this.speed=0,this.x=Math.max(0,Math.min(this.x,this.maxX)),this.y=Math.max(0,Math.min(this.y,this.maxY))}changeDirection({KEYS:t}){t.ArrowUp&&(this.direction=3),t.ArrowDown&&(this.direction=0),t.ArrowRight&&(this.direction=2),t.ArrowLeft&&(this.direction=1)}debug(){DEBUG_BAR.innerText=`Player X: ${(this.x/this.spriteSize).toFixed(3)} - Player.Y: ${(this.y/this.spriteSize).toFixed(3)} - Speed: ${this.speed.toFixed(3)}`}}const GAME_SETTINGS={collisionID:369},PLAYER_SETTINGS={MAX_SPEED:3.5,SPEED:.1,COLLISION_PRED:{LEFT:4,RIGHT:6,UP:6,DOWN:6}},game=new Game(GAME_SETTINGS),map=new Map(game),keyboard=new Keyboard,camera=new Camera(map),player=new Player(game,PLAYER_SETTINGS),socket=io();game.gameloop(()=>{player.changeDirection(keyboard),map.tilemap&&player.movement(keyboard,map.tilemap.layers[4]),camera.follow(player),map.render(camera),player.render(camera),map.render(camera,!0),player.debug(),socket.emit("oi",{a:1})}),game.run(async()=>{await map.load(),await player.load(),keyboard.listen()});